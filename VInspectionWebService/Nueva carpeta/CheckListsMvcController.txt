public ActionResult Create([Bind(Include = "IdPreUso,Fecha,Placa,Kilometraje,Mantto,Produccion,Destino,Conductor,SistemaDireccion,SistemaFrenos,Faros,LucesDireccionales,Asientos,Cinturones,Vidrios,LimpiaParabrisas,EspejoInterno,EspejoExterno,NivelAceite,NivelAgua,Combustible,Claxon,AlarmaRetorceso,RelojesIndicadores,Neumaticos,NeumaticoRepuesto,Extintor,ConosSeguridad,SogaArrastre,Botiquin,HerramientasLlaves,GataPalanca,Triangulo,Linterna,Cunas,Carroceria,Pertiga,Circulina,ComentariosAdicionales,Observacion1,Prioridad1,Observacion2,Prioridad2,Observacion3,Prioridad3,Observacion4,Prioridad4,CajaSoporte,Alcohol,Jabon,Algodon,Aposito,Bandas,Esparadrapo,Gasas1,Gasas2,Tijera,Venda,ComentariosBotiquin,EstadoSOAT,NuevaFechaSOAT,EstadRevTecnica,NuevaFechaRevTecnica,SOAT,RevTecnica,TarjetaPropiedad,CartillaSeguridad,CartillaERP,BanderaMantto,BanderaItems,BanderaComentarios,BanderaBotiquin,BanderaDocumentos,BanderaPrincipal,Buscador,Garitas")] CheckList checkList)
        {
            if (ModelState.IsValid)
            {
                db.CheckLists.Add(checkList);
                db.SaveChanges();

                Debug.Print("\n\n" + JsonConvert.SerializeObject(checkList) + "\n\n");

                SummariesGeneratorApiController generador = new SummariesGeneratorApiController();

                Debug.Print("Se inicia actualización de kilometraje del vehiculo");
                generador.ActualizarKilometrajo_Vehiculo(checkList);
                Debug.Print("Se inicia creación de nuevo resumen de Pre-Uso");
                generador.Guardar_ResumenPreUsos(checkList);
                if (generador.Evaluar_ActualizacionesDocumentos(checkList))
                {
                    Debug.Print("Se inicia actualización de documentos");
                    generador.Guardar_ActualizacionesDocumentos(checkList);
                }

                return RedirectToAction("Index");
            }

            return View(checkList);
        }